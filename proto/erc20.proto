syntax = "proto3";

package eth.erc20.v1;

message Transfers {
  repeated Transfer transfers = 1;
}

message Approvals {
repeated Approval approvals = 1;
}

message StakeDepositedEvents {
  repeated StakeDeposited stake_deposited_events = 1;
}

message StakeWithdrawnEvents {
  repeated StakeWithdrawn stake_withdrawn_events = 1;
}

message StakeDelegatedEvents {
  repeated StakeDelegated stake_delegated_events = 1;
}

message StakeDelegatedLockedEvents {
  repeated StakeDelegatedLocked stake_delegated_locked_events = 1;
}

message RebateClaimedEvents {
  repeated RebateClaimed rebate_claimed_events = 1;
}

message DelegationParametersUpdatedEvents {
  repeated DelegationParametersUpdated delegation_parameters_updated_events = 1;
}

message RewardsAssignedEvents {
  repeated RewardsAssigned rewards_assigned_events = 1;
}

message SignalledEvents {
  repeated Signalled signalled_events = 1;
}

message BurnedEvents {
  repeated Burned burned_events = 1;
}

message IndexerStakes {
  repeated IndexerStake indexer_stakes = 1;
}

message DelegationPools {
  repeated DelegationPool delegation_pools = 1;
}

message CurationPools {
  repeated CurationPool curation_pools = 1;
}

message SubgraphAllocations {
  repeated SubgraphAllocation subgraph_allocations = 1;
}

message IndexingDelegatorRewards {
  repeated IndexingDelegatorReward indexing_delegator_rewards = 1;
}

message IndexingRewards {
  repeated IndexingReward indexing_rewards = 1;
}

message StorageChanges {
  IndexerStakes indexer_stakes = 1;
  DelegationPools delegation_pools = 2;
  CurationPools curation_pools = 3;
  SubgraphAllocations subgraph_allocations = 4; 
  IndexingDelegatorRewards indexing_delegator_rewards = 5; 
}

message Events {
  Transfers transfers = 1;
  StakeDepositedEvents stake_deposited_events = 2;
  StakeWithdrawnEvents stake_withdrawn_events = 3;
  StakeDelegatedEvents stake_delegated_events = 4;
  StakeDelegatedLockedEvents stake_delegated_locked_events = 5;
  RebateClaimedEvents rebate_claimed_events = 6;
  RewardsAssignedEvents rewards_assigned_events = 7;
  DelegationParametersUpdatedEvents delegation_parameters_updated_events = 8;
  SignalledEvents signalled_events = 9;
  BurnedEvents burned_events = 10;
}

message Transfer {
  string id = 1;
  bytes from = 2;
  bytes to = 3;
  string value = 4;
  uint64 ordinal = 5;
}

message Approval {
string id = 1;
bytes owner = 2;
bytes spender = 3;
string amount = 4;
uint64 ordinal = 5;
}

message StakeDeposited {
  string id = 1;
  bytes indexer = 2;
  string tokens = 3;
  uint64 ordinal = 4;
}

message StakeWithdrawn {
  string id = 1;
  bytes indexer = 2;
  string tokens = 3;
  uint64 ordinal = 4;
}

message StakeDelegated {
  string id = 1;
  bytes indexer = 2;
  bytes delegator = 3;
  string tokens = 4;
  uint64 ordinal = 5;
}

message StakeDelegatedLocked {
  string id = 1;
  bytes indexer = 2;
  bytes delegator = 3;
  string tokens = 4;
  uint64 ordinal = 5;
}

message RebateClaimed {
  string id = 1;
  bytes indexer = 2;
  string delegated_tokens = 3;
  uint64 ordinal = 4;
}

message DelegationParametersUpdated{
  string id = 1;
  bytes indexer = 2;
  string indexing_reward_cut = 3;
  string query_fee_cut = 4;
  string delegator_parameter_cooldown = 5;
  uint64 block_number = 6;
  uint64 ordinal = 7;
}

message RewardsAssigned{
  string id = 1;
  bytes indexer = 2;
  string amount = 3;
  uint64 ordinal = 4;
}

message Signalled {
  string id = 1;
  bytes curator = 2;
  bytes subgraph_deployment_id =3;
  string tokens = 4;
  string signal = 5;
  string curation_tax = 6;
  uint64 ordinal = 7;
}

message Burned {
  string id = 1;
  bytes curator = 2;
  bytes subgraph_deployment_id =3;
  string tokens = 4;
  string signal = 5;
  uint64 ordinal = 6;
}

message IndexerStake {
  string id = 1;
  bytes indexer = 2;
  string new_stake = 3;
  string old_stake = 4;
  uint64 ordinal = 5;
}

message DelegationPool {
  string id = 1;
  bytes indexer = 2;
  string new_stake = 3;
  string old_stake = 4;
  uint64 ordinal = 5;
}

message CurationPool {
  string id = 1;
  string subgraph_deployment_id = 2;
  string new_signal = 3;
  string old_signal = 4;
  uint64 ordinal = 5;
}

message SubgraphAllocation {
  string id = 1;
  string subgraph_deployment_id = 2;
  string new_tokens= 3;
  string old_tokens = 4;
  uint64 ordinal = 5;
}

message IndexingDelegatorReward {
  string id = 1;
  bytes indexer = 2;
  string subgraph_deployment_id = 3; 
  string allocation_id = 4;
  string reward = 5; 
  uint64 ordinal = 6;
}

message IndexingReward {
  string id = 1;
  bytes indexer = 2;
  string amount = 3; 
  string indexer_rewards = 4;
  string delegator_rewards = 5; 
  uint64 ordinal = 6;
}

